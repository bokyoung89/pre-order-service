plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
}

bootJar.enabled = false

repositories {
    mavenCentral()
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = 'com.bokyoung'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '17'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        implementation 'org.springframework.cloud:spring-cloud-starter-feign:1.4.7.RELEASE'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

        implementation 'io.hypersistence:hypersistence-utils-hibernate-60:3.7.0'
        implementation 'com.fasterxml.jackson.module:jackson-module-jakarta-xmlbind-annotations'
        implementation 'redis.clients:jedis'
        runtimeOnly 'com.mysql:mysql-connector-j'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'

        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
    }

    test {
        useJUnitPlatform()
    }

    ext {
        set('springCloudVersion', "2023.0.0")
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }
}